#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\use_default_options true
\master 0000_BA15_wlan_1.lyx
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman cmr
\font_sans lmss
\font_typewriter cmtt
\font_math auto
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf true
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing other 1.2
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\leftmargin 35mm
\topmargin 35mm
\rightmargin 25mm
\bottommargin 30mm
\headheight 18mm
\headsep 12mm
\footskip 20mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Subsubsection
Messung von CPU- und Netzwerk-Last 
\begin_inset Quotes fld
\end_inset

meas
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Standard
Es wird eine eigene Anwendung in C (mit dem Namen 
\begin_inset Quotes fld
\end_inset

meas
\begin_inset Quotes frd
\end_inset

, kurz für 
\begin_inset Quotes fld
\end_inset

measurement
\begin_inset Quotes frd
\end_inset

) entwickelt, bei der die CPU-Last einzelner Prozesse evaluiert wird.
 Des Weiteren ermittelt meas neben der CPU-Last, die System- und Usertime
 eines Prozesses.
 
\end_layout

\begin_layout Standard
Zusätzlich unterstützt meas zwei Modi im Hinblick auf das Testszenario 02
 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Szenario-02:-Performance"

\end_inset

):
\end_layout

\begin_layout Itemize
Ermitteln von Statistiken aller PRP-involvierten Netzwerk-Interfaces 
\begin_inset Newline newline
\end_inset

[z.
 B.: 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

 (virtuell), 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 (physisch), 
\begin_inset Quotes fld
\end_inset

eth1
\begin_inset Quotes frd
\end_inset

 (physisch)]
\end_layout

\begin_layout Itemize
Ermitteln von Statistiken eines einzeln physischen Netzwerk-Interfaces (ohne
 PRP)
\begin_inset Newline newline
\end_inset

[z.
 B.: 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 (physisch)]
\end_layout

\begin_layout Subparagraph
Netzwerkstatistiken, Quelldaten 
\end_layout

\begin_layout Standard
Die Messresultate bezüglich erhaltener und transmittierter Bytes sowie die
 Berechnungnen von Bitraten basieren ausschliesslich auf Werten, welche
 das Betriebssystem vom Data-Link-Layer aufzeichnet.
\end_layout

\begin_layout Paragraph
Übersicht
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Die nachfolgende Grafik, soll eine Übersicht um den Gesamtumfang der Software
 meas illustrieren:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_overview.svg
	scale 55

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Gesamtübersicht meas-Applikation
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Betriebssystem-Kern legt periodisch statistische Daten in ein Dateisystem
 ab, welches beim Bootprozess des Betriebssytems im Arbeitsspeicher angelegt
 wird, das /proc-Dateisystem, siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:proc-Dateisystem"

\end_inset

.
 Aus diesem Dateisystem sollen alle relevanten statistischen Werte für die
 meas-Applikation gelesen und ausgewertet werden.
 
\end_layout

\begin_layout Standard
Beim Starten von meas gibt der Benutzer eine Intervall-Dauer sowie eine
 Anzahl von Intervallen und die zu überwachende Prozess-ID an.
 Im Attribut-Modul (attrs), wird spezifiziert, welche Zeile und Spalte aus
 welcher Datei im /proc-Dateisystem gelesen werden soll.
 
\end_layout

\begin_layout Standard
Das Sammel-Modul (collect), ist dafür zuständig, die im Attribut-Modul spezifizi
erten Werte in ensprechende Datenstrukturen abzulegen, sowie die Werte in
 Datentypen umzuwandeln, mit denen arithmetisch gerechnet werden kann.
 Das Timer-Modul (timer) wird verwendet, um die effektive Intervall-Dauer
 und Messfehler, damit ist die Zeit gemeint, welche aufgewendet werden muss,
 um von den entsprechenden Dateien im /proc-Dateisystem zu lesen.
 Es wird ein Timer verwendet, der eine Auflösung von 1 Mikrosekunde bereitstellt.
 Das Auswertungs-Modul (evaluate) hat die Aufgabe, gesammelte Statistiken
 in Form von Intervall-Resultaten auszuwerten und zusätzlich eine Gesamtstatisti
k zu berechnen.
 Im Print-Modul (print), werden ausgewertete Intervall-Daten, wie auch die
 Gesamtstatistik in eine für den Benutzer lesbare Form gebracht und können
 an eine beliebige Ausgabe geleitet werden, beispielsweise Textdateien,
 Konsole, Drucker, etc.
\end_layout

\begin_layout Paragraph
meas-Datentypen
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Um zusammengehörende Daten sinnvoll zu gliedern werden C-Structs verwendet:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="25col%">
<column alignment="left" valignment="top" width="65col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
C-Datentyp
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Kurzbeschrieb
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cmd_args_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enthält alle Argumente, die der Benutzer beim Starten der meas-Applikation
 via Kommandozeile übergeben hat (Prozess-ID, Intervallzeit, Anzahl Intervalle,
 etc.).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stats_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beinhaltet die relevanten, als Zahlen aufbereiteten Werte, die bei einem
 Lesezugriff auf das /proc-Dateisystem gelesen wurden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
time_vals_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wird zur temporären Speicherung der pro Intervall gemessenen Zeiten verwendet.
 Die gemessenen Zeiten werden nach Ablauf aller Messintervalle dem ensprechenden
 stats_t zugefügt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stats_res_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dieser Datentyp beinhaltet alle Daten eines ausgewerteten Messintervalls.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
stats_res_overall_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
In dieser Datenstruktur werden alle fertig ausgewerteten Daten gehalten,
 die zur Gestamtstatistik einer ganzen Messserie gehören.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
file_coords_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Koordinaten eines Wertes im /proc-Dateisystem.
 Die Koordinaten haben die Form: Liniennummer und Zeilennummer
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meas_buffer_meta_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Enthält wichtige Metainformationen, die für einen Mess-Puffer von Bedeutung
 sind.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
meas_buffer_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Datenstruktur eines Mess-Puffers.
 Ein Mess-Puffer wird verwendet, um die Rohdaten pro Intervall aus dem /proc-Dat
eisystem zwischen zu speichern.
 Die Rohdaten werden erst am Schluss einer Mess-Serie aufbereitet und ausgewerte
t.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
file_params_t
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Diese Datenstruktur enthält die Metainformationen zu jedem Wert, der aus
 dem /proc-Dateisystem gelesen werden soll.
 Dazu gehören beispielsweise der Dateipfad, die Koordinaten des Messwertes,
 eine Referenz auf die Rohdaten des Dateiinhalts, etc.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Kurzbeschrieb der meas-Datentypen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Detailansicht Module
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Basierend auf der Gesamtübersicht, wurden die verschiedenen Module implementiert.
 Die Modulübersicht soll eine etwas detailliertere Übersicht darstellen.
 Bei der folgenden Illustration wurden der Übersichtlichkeit wegen pro Modul
 nur relevante, modulübergreifende Funktionen berücksichtigt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_modules.svg
	scale 36

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Detailansicht meas-Module
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
meas
\end_layout

\begin_layout Standard
Diese Komponente ist der Programmeinstiegspunkt.
 Sie ist für das Einlesen Programmargumente zuständig, sowie für die Koordinatio
n des Hauptprogrammablaufs.
 Beispielsweise werden hier die Aufrufe zum Starten einer Messung ausgeführt,
 wie auch die Intervall-Wartezeiten berechnet, etc.
\end_layout

\begin_layout Subparagraph
mtimer
\end_layout

\begin_layout Standard
mtimer.h ist eine Programm-Header-Datei, die von Prof.
 Dr.
 M.
 Thaler (ZHAW, InIT) geschrieben wurde.
 Sie enthält C-Makros, die einen universellen, vereinfachten Zugriff auf
 verschiedene Timer-Module eines Standard-Linux-Systems ermöglichen.
 Für die meas-Applikation sind zwei Timer-Typen im Einsatz:
\end_layout

\begin_layout Itemize
Timer mit einer Auflösung von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$10 ms$
\end_layout

\end_inset

 für das Messen der effektiven Intervallzeiten.
\end_layout

\begin_layout Itemize
Timer mit einer Auflösung von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$1 
\backslash
mu s$
\end_layout

\end_inset

, um die Lesezeiten aus dem /proc-Dateisystem aufzuzeichnen.
\end_layout

\begin_layout Subparagraph
attrs
\end_layout

\begin_layout Standard
Diese Komponente repräsentiert die Schnittstelle zum /proc-Dateisystem.
 Hier wird spezifiziert, welche Dateien ausgelesen werden und an welcher
 Position (Zeile/Spalte) sich der Datenwert pro Datei befindet, welcher
 für die Statistikevaluation benötigt wird.
\end_layout

\begin_layout Standard
Diese Konfigurationsparameter sind in globalen Variablen gespeichert und
 werden beim Starten der Applikation festgelegt.
 Andere Module greifen während des Ablaufs einer Messserie nur lesend auf
 die Variablen zu.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{language=C,tabsize=2}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption={Deklaration der Konfigurationsfelder},captionpos=b]
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

unsigned char prp_enabled;
\end_layout

\begin_layout Plain Layout

unsigned char cmd_line_count;
\end_layout

\begin_layout Plain Layout

char init_paths    [ MAX_PROC_VALS ][ PATH_LEN ];
\end_layout

\begin_layout Plain Layout

char init_search   [ MAX_PROC_VALS ][ PATH_LEN ];
\end_layout

\begin_layout Plain Layout

char init_val_pos  [ MAX_PROC_VALS ][ PATH_LEN ];
\end_layout

\begin_layout Plain Layout

char init_val_delim[ MAX_PROC_VALS ][ PATH_LEN ];
\end_layout

\begin_layout Plain Layout

char init_val_types[ MAX_PROC_VALS ][ PATH_LEN ];
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
prp_enabled gibt Auskunft darüber, ob die meas-Appliktion im PRP-Mode gestartet
 wurde oder nicht.
 cmd_line_count enthält die Information darüber, wie viele Werte jeweils
 aus dem /proc-Dateisystem gelesen werden.
\end_layout

\begin_layout Standard
Initialisierung eines Konfigurations-Datenfeldes:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{language=C,tabsize=2}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption={Beispiel eines Konfigurationsfeldes, /proc-Dateipfade
},captionpos=b]
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

strncpy( init_paths[ INDEX_UTIME        ], "/proc/$PID$/stat", PATH_LEN
 );   
\end_layout

\begin_layout Plain Layout

strncpy( init_paths[ INDEX_STIME        ], "/proc/$PID$/stat", PATH_LEN
 );   
\end_layout

\begin_layout Plain Layout

strncpy( init_paths[ INDEX_IF_NAME_PRP  ], "/proc/net/dev"   , PATH_LEN
 );
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Mit $-Zeichen umgebene Zeichen im Dateipfad werden in diesem Fall durch
 die Prozess-ID ersetzt, die dem Programm als Argument übergeben wird.
\end_layout

\begin_layout Standard
Initialisierung eines Konfigurations-Datenfeldes:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstset{language=C,tabsize=2}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption={Beispiel eines Konfigurationsfeldes, Datei-Koordinate
n},captionpos=b]
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

strncpy( init_val_pos[ INDEX_UTIME        ], "1:14", PATH_LEN );   
\end_layout

\begin_layout Plain Layout

strncpy( init_val_pos[ INDEX_STIME        ], "1:15", PATH_LEN );   
\end_layout

\begin_layout Plain Layout

strncpy( init_val_pos[ INDEX_IF_NAME_PRP  ], "7:1" , PATH_LEN );
\end_layout

\begin_layout Plain Layout

strncpy( init_val_pos[ INDEX_RX_BYTES_PRP ], "7:2" , PATH_LEN );
\end_layout

\begin_layout Plain Layout

strncpy( init_val_pos[ INDEX_TX_BYTES_PRP ], "7:10", PATH_LEN );
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
pstring
\end_layout

\begin_layout Standard
Dieses Modul behandelt das Ersetzen von einmal oder mehrfach vorkommenden
 Zeichenketten in einer Zeichenkette.
 So wird es beispielsweise möglich, das Muster 
\begin_inset Quotes fld
\end_inset

$PID$
\begin_inset Quotes frd
\end_inset

 in einem Dateipfad durch eine Prozess-ID zu ersetzen.
\end_layout

\begin_layout Subparagraph
collect
\end_layout

\begin_layout Standard
Dieser Programmteil ist dafür zuständig, die in 
\begin_inset Quotes fld
\end_inset

attrs
\begin_inset Quotes frd
\end_inset

 definierten Werte aus dem /proc-Dateisystem zu lesen.
 Besonders erwähnenswert sind die Lesepuffer.
 Die Initialisierung sowie die Schreib- und Leseoperationen dieser Puffer
 werden alle in diesem Programm-Modul abgehandelt.
 Des Weiteren ist 
\begin_inset Quotes fld
\end_inset

collect
\begin_inset Quotes frd
\end_inset

 dafür zuständig, die in den Puffern gesammelten Rohdaten aus /proc für
 die spätere Auswertung aufzubereiten.
 Ferner befinden sich hier administrative Funktionen, die die Datenstrukturen
 betreffend den /proc-Datei-Metadaten behandeln.
\end_layout

\begin_layout Subparagraph
evaluate
\end_layout

\begin_layout Standard
Dieses Modul enthält alle Funktionen, welche aus den gesammelten Messdaten
 statistische Werte berechnen, sowohl pro Messintervall als auch eine Gesamtstat
istik über alle Messintervalle.
 Die berechneten Statistiken werden in den entsprechenden Datenstrukturen
 abgelegt und können anschliessend für Ausgaben auf bliebige Ausgabe-Geräte
 weiterverwendet werden.
\end_layout

\begin_layout Subparagraph
print
\end_layout

\begin_layout Standard
Die Implementationen im Print-Modul dienen dazu, Datenstrukturen mit Intervall-R
esultaten oder Gesamtstatistiken auf beliebige Ausgabegeräte auszugeben.
 Der Umstand, dass in einem unixoiden System alles als eine Datei angesehen
 wird, macht es möglich, dass die Ausgabefunktionen generisch implementiert
 werden können.
 So kann den Ausgabefunktionen ein C-Pointer auf eine entsprechende Ausgabedatei
 übergeben werden.
 Ausgabedateien haben beispielsweise die Form einer Ausgabekonsole, einer
 einfachen Text-Datei, einer Druckerwarteschlange, etc.
\end_layout

\begin_layout Paragraph
Ablauf einer Messserie
\begin_inset CommandInset label
LatexCommand label
name "par:Ablauf-einer-Messserie"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Das folgende Sequenzdiagramm, verdeutlicht den Ablauf einer Messserie mit
 meas.
 Die Namen der Funktionsparameter entsprechen nicht genau denen aus dem
 Quellcode, um die Interpretaion des Sequenzdiagramms zu vereinfachen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_sequence.svg
	scale 42

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ablaufdiagramm meas-Messserie
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Minderung von Messfehlern / Optimierungen
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Die Zeit, welche vergeht, um die Datenwerte aus dem /proc-Dateisystem zu
 lesen, verfälscht die Messung eines Intervalls.
 Dieser Zeitabschnitt sollte deshalb möglichst kurz gehalten werden.
 Während des Entwicklungsprozesses von meas wurden zwei Optimierungsschritte
 durchgeführt, welche der Verkürzung dieses Zeitabschnitts gewidmet wurden.
\end_layout

\begin_layout Standard
Der Messfehler wird pro Messintervall auf eine Genauigkeit von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$1 
\backslash
mu s$
\end_layout

\end_inset

 protokolliert und in den Ausgaben von meas angezeigt, unter der Bezeichnung
 
\begin_inset Quotes fld
\end_inset

Overhead Time
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Subparagraph
Resultate ohne Optimierungen
\end_layout

\begin_layout Standard
Beim Durchführen erster Messserien mit meas, wurde ein Messfehler von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$~ 7 ms$
\end_layout

\end_inset

 festgestellt, was im Vergleich zur Intervallzeit einen relativ hohen Anteil
 darstellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_read_times_1.svg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Messfehler ohne Optimierungen.
 Intervallzeit 1 s.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Resultate nach erster Optimierungsstufe
\end_layout

\begin_layout Standard
Nach sorgfältiger Analyse des Quellcodes wurde festgestellt, dass das Interpreti
eren und Kopieren der gelesenen Werte sehr viel Zeit in Anspruch nahmen.
 Hauptsächlich durch zahlreiche Aufrufe der memcpy-Funktion mit nur kleinen
 Datenbereichen.
 Die memcpy-Funktion kopiert eine definierte Anzahl von Bytes von einer
 Quell- an eine Zieladresse im Arbeitsspeicher.
 Diese Aufrufe konnten signifikant reduziert werden.
 Nach den Code-Optimierungen war noch ein Messfehler von 
\begin_inset ERT
status open

\begin_layout Plain Layout

$~ 600 
\backslash
mu s$
\end_layout

\end_inset

 zu verzeichnen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_read_times_2.svg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Messfehler nach erster Optimierungsstufe.
 Intervallzeit 1 s.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Resultate nach zweiter Optimierungsstufe
\end_layout

\begin_layout Standard
Zusätzlich zum Auslesen der Werte wurden die Statistiken eines Intervalls
 bereits ausgewertet.
 Ebenfalls wurde je nach Konfigurationsparameter der Software pro Intervall
 eine Konsolenausgabe getätigt, was einen zusätzlichen Zeitverlust bedeutete.
\end_layout

\begin_layout Standard
Das Konzept, wie das Auslesen der Werte aus dem /proc-Dateisystem umgesetzt
 wird, wurde grundlegend geändert, zwecks weiterer Minimierung des Messfehlers,
 um eine höhere Messgenauigkeit zu erreichen.
 Wie bereits im Sequenzdiagramm (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:Ablauf-einer-Messserie"

\end_inset

) ersichtlich ist, wurde ein Lesepuffer eingeführt, der die gelesenen Werte
 zwischenspeichert und die Auswertungen und Ausgaben erst nach Beenden einer
 Messserie durchgeführt werden.
 Die Funktion, welche für das Auslesen der Werte aus dem /proc-Dateisystem
 zuständig ist, wurde mit möglichst wenigen Instruktionen implementiert
 und hat folgende Charakteristik:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace{7mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Funktionskörper, Auslesen aus dem /proc-Dateisystem},
  captionpos=b,language=C]{_src_lst/meas_read_to_meas_buffers.c}
\end_layout

\begin_layout Plain Layout


\backslash
label{lst:meas_read_to_meas_buffers}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Aufgrund dieser weiteren Optimierung wurde abermals ein betrachtlicher Gewinn
 an Performanz erreicht.
 Die durchschnittliche Zeit für das Auslesen der Dateien aus dem /proc-Dateisyst
em beträgt nach der zweiten Optimierungsstufe noch 
\begin_inset ERT
status open

\begin_layout Plain Layout

$~ 100 
\backslash
mu s$
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/meas_read_times_3.svg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Messfehler nach zweiter Optimierungsstufe.
 Intervallzeit 1 s.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nach diesen beiden Optimierungsstufen wurde eine im Rahmen dieser Arbeit
 akzeptable Zeitspanne erreicht, um die statistischen Werte auszulesen.
 Ferner sei erwähnt, dass auch die Aktualisierungs-Frequenz der Netzwerkstatisti
ken im /proc-Dateisystem auf 
\begin_inset ERT
status open

\begin_layout Plain Layout

$100 
\backslash
mu s$
\end_layout

\end_inset

 limitiert ist, siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:proc-Netzwerkstatistiken"

\end_inset

.
 Nach diesen Optimierungen ist es nicht mehr möglich, ausgewertete Resultate
 direkt während der Messung auf einer Ausgabekonsole zu verfolgen.
 Der Fokus dieser Arbeit liegt jedoch darin, Messungen aufzuzeichnen und
 anschliessend die ausgewerteten Resultate zu dokumentieren.
\end_layout

\begin_layout Paragraph
Systemcalls und Datenkonsistenz
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Um von den Dateien aus /proc zu lesen, wurden direkt die Systemcalls des
 Betriebssystems 
\begin_inset ERT
status open

\begin_layout Plain Layout

$open()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "open_man_page"

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$read()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "read_man_page"

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$lseek()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "lseek_man_page"

\end_inset

 und 
\begin_inset ERT
status open

\begin_layout Plain Layout

$close()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "close_man_page"

\end_inset

 verwendet.
 Beim Öffnen der Dateien (
\begin_inset ERT
status open

\begin_layout Plain Layout

$open()$
\end_layout

\end_inset

-Systemcall) werden die Flags O_RDONLY (nur Lesezugriff) und O_SYNC verwendet.
 O_SYNC garantiert die Datenkonsistenz.
 Gleichzeitige Lese- und Schreibzugriffe auf Dateien werden somit vermieden.
 Diese Situation könnte auftreten, wenn beispielsweise der Kernel die /proc-Stat
istiken aktualisiert und zur gleichen Zeit meas lesend auf die entsprechende
 Datei zuzugreifen versucht.
\end_layout

\begin_layout Paragraph
Funktionstests
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Um sicherzustellen, ob die Werte korrekt ausgelesen und in entsprechende
 Zahlenformate umgewandelt werden, wurde ein Unit-Test geschrieben.
 Der Test liest Werte aus einer Datei, und vergleicht die erhaltenen Resultate
 mit erwarteten Werten.
 Wenn ein ausgelesener Wert nicht mit dem erwarteten Wert übereinstimmt,
 schlägt der gesamte Test fehl.
 Für das Vergleichen der Werte wird die 
\begin_inset ERT
status open

\begin_layout Plain Layout

$assert()$
\end_layout

\end_inset

-Funktion 
\begin_inset CommandInset citation
LatexCommand cite
key "assert_man_page"

\end_inset

 verwendet:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption={Implementierung, meas Unit Test},  captionpos=b,languag
e=C]{_src_lst/meas_unit_test.c}
\end_layout

\begin_layout Plain Layout


\backslash
label{lst:meas_unit_test}
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Speicherüberprüfung
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Bei der Implemtierung der meas-Applikation wurde das Konzept der dynamischen
 Speicherallozierung (
\begin_inset ERT
status open

\begin_layout Plain Layout

$malloc()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "malloc_man_page"

\end_inset

, 
\begin_inset ERT
status open

\begin_layout Plain Layout

$free()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "free_man_page"

\end_inset

) angewendet.
 Um zu überprüfen, ob jede Allokation von Speicher jeweils wieder korrekt
 freigegeben wurde, also keine sogenannten 
\begin_inset Quotes fld
\end_inset

Speicherlecks
\begin_inset Quotes frd
\end_inset

 entstehen, wurde die Profiling-Software 
\begin_inset Quotes fld
\end_inset

valgrind
\begin_inset Quotes frd
\end_inset

 (siehe Tabelle 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:valgrind_desc"

\end_inset

) eingesetzt.
 Nach jedem Release einer Version von meas wird ein Profiling-Rerport erstellt.
 Dieser hat die nachfolgend gezeigte Form:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begingroup     
\end_layout

\begin_layout Plain Layout


\backslash
fontsize{8pt}{11pt}
\backslash
selectfont
\end_layout

\begin_layout Plain Layout


\backslash
begin{Verbatim}[commandchars=
\backslash

\backslash

\backslash
{
\backslash
}]
\end_layout

\begin_layout Plain Layout

==20699== Memcheck, a memory error detector 
\end_layout

\begin_layout Plain Layout

==20699== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
 
\end_layout

\begin_layout Plain Layout

==20699== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
 
\end_layout

\begin_layout Plain Layout

==20699== Command: ./meas -p 2430 -i 0.01 -n 500 -v 1 -m 1 
\end_layout

\begin_layout Plain Layout

==20699==  
\end_layout

\begin_layout Plain Layout

no of intervals: 500 Using "/tmp" as file output location.
\end_layout

\begin_layout Plain Layout

Writing to: /tmp/meas_interval_results_1431290017 
\end_layout

\begin_layout Plain Layout

Writing to: /tmp/meas_overall_stats_1431290017 
\end_layout

\begin_layout Plain Layout

==20699==  
\end_layout

\begin_layout Plain Layout

==20699== HEAP SUMMARY: 
\end_layout

\begin_layout Plain Layout

==20699==     in use at exit: 0 bytes in 0 blocks 
\end_layout

\begin_layout Plain Layout

==20699==   total heap usage: 1,613 allocs, 1,613 frees, 12,835,336 bytes
 allocated 
\end_layout

\begin_layout Plain Layout

==20699==  
\end_layout

\begin_layout Plain Layout

==20699== 
\backslash
textbf{All heap blocks were freed -- no leaks are possible}
\end_layout

\begin_layout Plain Layout

==20699==  
\end_layout

\begin_layout Plain Layout

==20699== For counts of detected and suppressed errors, rerun with: -v 
\end_layout

\begin_layout Plain Layout

==20699== 
\backslash
textbf{ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 13 from 6)}
\end_layout

\begin_layout Plain Layout


\backslash
end{Verbatim}
\end_layout

\begin_layout Plain Layout


\backslash
endgroup
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Plausibilitätskontrolle
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Um sicherzustellen, ob die berechneten Statistiken/Resultate von meas plausible
 Werte aufweisen, wurden diese Resultaten anderer Tools, gegenübergestellt.
 In Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Verifizierung-der-Messwerte"

\end_inset

 sind die Ergebnisse der besagten Gegenüberstellung detailliert beschrieben.
 Des Weiteren wurden Messungen durchgeführt mit maximaler Lasterzeugung
 bezüglich Data-Link-Layer.
 Diese Resultate wurden sodann mit der theoretischen Obergrenze, die eine
 Bitrate eines 100-MBit/s-Interface erreichen kann, verglichen, siehe Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:Frames-mit-maximaler"

\end_inset

.
\end_layout

\begin_layout Paragraph
Ausgaben der Messresultate
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Als Ausgabe von meas wird die Funktion 
\begin_inset ERT
status open

\begin_layout Plain Layout

$fprintf()$
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "fprintf_man_page"

\end_inset

 verwendet, welche eine Textausgabe auf verschiedene Ausgabegeräte ermöglicht.
 Exemplarische Ausgabe eines Messintervalls in eine Textdatei:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begingroup
\end_layout

\begin_layout Plain Layout


\backslash
fontsize{8pt}{11pt}
\backslash
selectfont
\end_layout

\begin_layout Plain Layout


\backslash
begin{Verbatim}[commandchars=
\backslash

\backslash

\backslash
{
\backslash
}]
\end_layout

\begin_layout Plain Layout

********************************************************************************
***********
\end_layout

\begin_layout Plain Layout

 Process specific statistics, interval no:     0
\end_layout

\begin_layout Plain Layout

 PID:  7327   Time: elapsed 1.000s, user 0.31s, sys 0.06s, overhead 120us 
 
\end_layout

\begin_layout Plain Layout

 CPU:  cpu workload 36.99%
\end_layout

\begin_layout Plain Layout

 Machine wide network stats for PRP involved interfaces, not process specific:
\end_layout

\begin_layout Plain Layout

 Interface       RX Bytes       TX Bytes      RX Bitrate [MBit/s]      TX
 Bitrate [MBit/s] 
\end_layout

\begin_layout Plain Layout

 ===============================================================================
==========  
\end_layout

\begin_layout Plain Layout

 prp (prp1)             0       12287184                     0.00       
             98.28  
\end_layout

\begin_layout Plain Layout

 if0 (eth0)           140       12339892                     0.00       
             98.71  
\end_layout

\begin_layout Plain Layout

 if1 (eth1)           140       12339892                     0.00       
             98.71
\end_layout

\begin_layout Plain Layout

 ===============================================================================
==========
\end_layout

\begin_layout Plain Layout

********************************************************************************
***********
\end_layout

\begin_layout Plain Layout


\backslash
end{Verbatim}
\end_layout

\begin_layout Plain Layout


\backslash
endgroup
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset

Exemplarische Ausgabe eines Reports über eine gesamte Messserie in eine
 Textdatei:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begingroup     
\end_layout

\begin_layout Plain Layout


\backslash
fontsize{7pt}{9pt}
\backslash
selectfont
\end_layout

\begin_layout Plain Layout


\backslash
begin{Verbatim}[commandchars=
\backslash

\backslash

\backslash
{
\backslash
}]
\end_layout

\begin_layout Plain Layout

********************************************************************************
*****************
\end_layout

\begin_layout Plain Layout

 Native location: /results/testing/02_PRP/02.U.MAX.K
\end_layout

\begin_layout Plain Layout

 Overall statistics of Process with PID:   7327   |   Total elapsed time
 [s]:       300.02
\end_layout

\begin_layout Plain Layout

                                                  |   Total overhead time
 [us]:      35966  
\end_layout

\begin_layout Plain Layout

 Total no of intervals:               300  
\end_layout

\begin_layout Plain Layout

 Duration of each interval [s]:     1.000
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Elapsed time [s]:   Average:    1.00  
\end_layout

\begin_layout Plain Layout

 (per interval)      Min:        1.00 at interval: [  100.000s,   101.000s]
                      
\end_layout

\begin_layout Plain Layout

                     Max:        1.00 at interval: [  244.000s,   245.000s]
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Overhead time [us]: Average:     119
\end_layout

\begin_layout Plain Layout

 (per interval)      Min:          89 at interval: [  162.000s,   163.000s]
\end_layout

\begin_layout Plain Layout

                     Max:         232 at interval: [  100.000s,   101.000s]
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Usertime [s]:       Average:    0.31
\end_layout

\begin_layout Plain Layout

                     Min:        0.25 at interval: [  264.000s,   265.000s]
\end_layout

\begin_layout Plain Layout

                     Max:        0.34 at interval: [   78.000s,    79.000s]
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Systemtime [s]:     Average:    0.06
\end_layout

\begin_layout Plain Layout

                     Min:        0.03 at interval: [    5.000s,     6.000s]
\end_layout

\begin_layout Plain Layout

                     Max:        0.12 at interval: [  264.000s,   265.000s]
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 CPU workload [%]:   Average:   36.71
\end_layout

\begin_layout Plain Layout

                     Min:       35.00 at interval: [  130.000s,   131.000s]
\end_layout

\begin_layout Plain Layout

                     Max:       38.00 at interval: [   33.000s,    34.000s]
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

 Machine wide statistics of the network interfaces:
\end_layout

\begin_layout Plain Layout

 Following statistics are bound to a specific NIC not to the PID mentioned
 above.
\end_layout

\begin_layout Plain Layout

 ===============================================================================
================
\end_layout

\begin_layout Plain Layout

 Statistics for virtual PRP interface with label: prp1
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

             RX [MBit/s] | at interval              ||| TX [MBit/s] | at
 interval
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Average:           0.00 |                      --- |||       98.06 |    
                  ---
\end_layout

\begin_layout Plain Layout

 Min:               0.00 | [    0.000s,     1.000s] |||       97.64 | [   38.000s,
    39.000s]
\end_layout

\begin_layout Plain Layout

 Max:               0.00 | [  286.000s,   287.000s] |||       98.45 | [  114.000s,
   115.000s]
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Total received bytes:              660
\end_layout

\begin_layout Plain Layout

 Total transmitted bytes:    3677415293
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Statistics for first PRP involved physical interface with label: eth0
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

             RX [MBit/s] | at interval              ||| TX [MBit/s] | at
 interval
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Average:           0.00 |                      --- |||       98.71 |    
                  ---
\end_layout

\begin_layout Plain Layout

 Min:               0.00 | [    1.000s,     2.000s] |||       98.66 | [   68.000s,
    69.000s]
\end_layout

\begin_layout Plain Layout

 Max:               0.00 | [  202.000s,   203.000s] |||       98.72 | [    9.000s,
    10.000s]
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Total received bytes:            21700
\end_layout

\begin_layout Plain Layout

 Total transmitted bytes:    3701774730
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Statistics for second PRP involved physical interface with label: eth1
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

             RX [MBit/s] | at interval              ||| TX [MBit/s] | at
 interval
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Average:           0.00 |                      --- |||       98.71 |    
                  ---
\end_layout

\begin_layout Plain Layout

 Min:               0.00 | [    1.000s,     2.000s] |||       98.66 | [   68.000s,
    69.000s]
\end_layout

\begin_layout Plain Layout

 Max:               0.00 | [  202.000s,   203.000s] |||       98.73 | [  259.000s,
   260.000s]
\end_layout

\begin_layout Plain Layout

            --------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 Total received bytes:            21700
\end_layout

\begin_layout Plain Layout

 Total transmitted bytes:    3701774730
\end_layout

\begin_layout Plain Layout

 -------------------------------------------------------------------------------
----------------
\end_layout

\begin_layout Plain Layout

 ===============================================================================
================
\end_layout

\begin_layout Plain Layout

********************************************************************************
*****************
\end_layout

\begin_layout Plain Layout


\backslash
end{Verbatim}
\end_layout

\begin_layout Plain Layout


\backslash
endgroup
\end_layout

\end_inset


\end_layout

\end_body
\end_document
