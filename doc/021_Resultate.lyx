#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\use_default_options true
\master 0000_BA15_wlan_1.lyx
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman cmr
\font_sans lmss
\font_typewriter cmtt
\font_math auto
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf true
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing other 1.2
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Stichwortverzeichnis
\shortcut idx
\color #008000
\end_index
\leftmargin 35mm
\topmargin 35mm
\rightmargin 25mm
\bottommargin 30mm
\headheight 18mm
\headsep 12mm
\footskip 20mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Resultate und Interpretation 
\begin_inset CommandInset label
LatexCommand label
name "chap:Resultate"

\end_inset


\end_layout

\begin_layout Standard
In diesem Kapitel werden basierend auf den Messszenarien aus Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Ermittlung-der-Performance"

\end_inset

 Schlüsse in Form einer Interpretation bezüglich der PRP-Implementation
 (PRP-1 stack) gezogen.
 Die erzielten Messresultate sind ausser dem ersten Szenario in Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Messresultate"

\end_inset

 aufgeführt.
 Dies hat den Grund, dass verständlich gemacht werden soll, anhand welcher
 Resultatmenge jeweils interpretiert wurde.
\end_layout

\begin_layout Standard
Um das Verständnis der Messresultate zu stärken, muss man sich folgenden
 Abhängigkeiten sowie dem Zusammenspiel von Client und Server bewusst sein:
 Auf dem Client wird die Netzwerklast generiert und an dessen PRP-1 stack
 gesendet.
 Dieser bereitet die Frames zum Versand vor (CPU-Last wird beansprucht)
 und leitet es an seine beiden physischen Interfaces weiter, die dann die
 Frames versenden (eine bestimmte TX-Bitrate beim Client wird erzielt).
 Der Server erhält die Frames (eine bestimmte RX-Bitrate beim Server wird
 erzielt) und leitet sie an dessen PRP-1 stack weiter, der die Frames verarbeite
n muss (CPU-Zeit wird benötigt).
 
\end_layout

\begin_layout Standard
Bei einer UDP-Netzwerklast würde sich das immer so weiterführen, solange
 der Client Daten an den Server sendet.
 Bei TCP muss der Server die empfangenen Daten quittieren, was wiederum
 CPU-Last beansprucht.
 Diese Quittungen sendet der Server über den PRP-1 stack an den Client (TX-Bitra
te beim Server und RX-Bitrate beim Client werden erzielt).
 Dieser muss dann die Quittungen verarbeiten und benötigt wiederum CPU-Last.
 Es besteht somit Grund zur Annahme, dass zwei Netzwerklasten, welche sich
 lediglich im Protokoll (TCP, UDP) unterscheiden, die TCP-Last mehr Leistung
 vom Prozessor beansprucht als die UDP-Last.
\end_layout

\begin_layout Standard
Der vorhin geschilderte Ablauf und die daraus entstehenden Abhängigkeiten
 der Testparameter (CPU, Bitrate) werden in der folgenden Abbildung verdeutlicht
:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_dependencies_values.svg
	lyxscale 50
	display false
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Beeinflussung der Testparameter beim Versand von TCP-Netzwerklast
\begin_inset CommandInset label
LatexCommand label
name "fig:Beeinflussung-der-Testparameter"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Szenario 01: Performance im PRP-Netzwerk
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-01:-Performance"

\end_inset


\end_layout

\begin_layout Standard
Die Interpretation dieses Szenarios befindet sich in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Interpretation"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 01: Messresultate}]{Messresultate}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:01-Messresultate"

\end_inset


\end_layout

\begin_layout Subsubsection
shck-Client
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/cpusrv01.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: CPU-Last, System- / Usertime des PRP-1
 stacks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/cpu_load_srv01.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: CPU-Last des PRP-1 stacks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/rxsrv01.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: RX-Bitrate [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/net_prp1_rx_bitrate_srv01.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: RX-Bitrate auf 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

-Netzwerk-Interface [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/txsrv01.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: TX-Bitrate [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/net_prp1_tx_bitrate_srv01.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Client: TX-Bitrate auf 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

-Netzwerk-Interface [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
shck-Server
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/cpusrv02.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: CPU-Last, System- / Usertime des PRP-1
 stacks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/cpu_load_srv02.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: CPU-Last des PRP-1 stacks
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/rxsrv02.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: RX-Bitrate [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/net_prp1_rx_bitrate_srv02.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: RX-Bitrate auf 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

-Netzwerk-Interface [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset CommandInset include
LatexCommand input
filename "_tex/01/txsrv02.tex"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: TX-Bitrate [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/graph/01/net_prp1_tx_bitrate_srv02.svg
	lyxscale 50
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Resultat Szenario 01 auf shck-Server: TX-Bitrate auf 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

-Netzwerk-Interface [MBit/s]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 01: Interpretation}]{Interpretation}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sub:Interpretation"

\end_inset


\end_layout

\begin_layout Standard
Die Resultate dieses Szenarios weisen bei den Netzwerklasten innerhalb der
 selben Übermittlungsart und des selben Lasttyps (sie unterscheiden sich
 nur in der Zeitspanne) keine markanten Unterschiede auf, was die Reproduzierbar
keit der Messungen beweist.
 Des Weiteren wird aus dieser Erkenntnis in diesem Kapitel nicht zwischen
 den Zeitspannen unterschieden.
\end_layout

\begin_layout Subsubsection
Limitierungen / Engpässe
\end_layout

\begin_layout Standard
Die Netzwerklasten mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 erreichen die theoretischen Grenzwerte (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Theoretische-Grenzwerte"

\end_inset

) und werden somit von der Netzwerkanbindung limitiert.
 Anhand der ermittelten Werte kann festgestellt werden, dass bei diesem
 Lasttyp die TCP-Datenströme im Vergleich zu UDP eine höhere CPU-Last verursache
n, jedoch die selben TX-Bitraten auf dem shck-Client und RX-Bitraten auf
 dem shck-Server erzielen (theoretischer Grenzwert).
 Eine weitere Abweichung dieser beiden Strömen mit selbem Lasttyp ist, dass
 der shck-Client bei TCP-Messungen Quittierungen und bei UDP-Messungen keine
 Antwort vom shck-Server erhält, was die höhere CPU-Last bei TCP erklärt.
\end_layout

\begin_layout Standard
Beim Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 ist zwischen dem TCP- und UDP-Verkehr ein grosser Unterschied festzustellen.
 Ihre Gemeinsamkeit beträgt aber darin, dass beide Ströme nicht den theoretische
n Grenzwert erlangen.
 Bei der TCP-Last fällt hier jedoch aufgrund der Natur von TCP zusätzlich
 das Erhalten von Quittierungen vom Server an, weshalb hier im Gegensatz
 zur UDP-Last shck bzw.
 dessen UDP-/TCP-Socket mehr Leistung beansprucht.
 Daraus resultiert, dass weniger Ressourcen für das effektive Versenden
 von TCP-Paketen zur Verfügung steht.
 Somit erzielt bei diesem Lasttyp der UDP-Datenstrom beim PRP-1 stack eine
 höhere CPU-Last, kann jedoch durch den häufigeren Versand von Paketen auf
 dem Client eine höhere TX-Bitrate erzielen.
 Daraus lässt sich schliessen, dass der UDP-Verkehr des Lasttyps 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 von der CPU limitiert wird.
 Beim TCP-Verkehr des selben Lasttyps stösst man ebenfalls auf einen Engpass
 durch den Prozessor, welcher durch das zusätzliche Verarbeiten von Quittierunge
n weiter verengt wird.
\end_layout

\begin_layout Standard
Zusammengefasst ergeben sich folgende Engpässe:
\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

: Engpass durch Prozessor
\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

: Limitierung durch Netzwerkanbindung
\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

: Engpass durch Prozessor
\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

: Limitierung durch Netzwerkanbindung
\end_layout

\begin_layout Subsubsection
Verhalten zwischen shck-Client und -Server
\end_layout

\begin_layout Standard
Bezüglich der Belastung des Prozessors durch den PRP-1 stack ist pro Übertragung
s- und Lasttyp folgende absteigende Reihenfolge ersichtlich:
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
shck-Client
\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset


\begin_inset Newline newline
\end_inset

höchste CPU-Last
\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset


\begin_inset Newline newline
\end_inset

kleinste CPU-Last
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
shck-Server
\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset


\begin_inset Newline newline
\end_inset

höchste CPU-Last
\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Itemize
UDP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Itemize
TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset


\begin_inset Newline newline
\end_inset

kleinste CPU-Last
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Den Resultaten ist des Weiteren zu entnehmen, das bei den Netzwerklasten
 über UDP (besonders mit dem hier vom Netzwerk limitierten Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

) auf dem shck-Server mehr CPU-Last verursacht wird.
 Dies bedeutet, dass der PRP-1 stack für das Empfangen mehr Leistung beansprucht
 als für das Senden.
 Hierbei muss der Empfänger / Server auch Ressourcen für die Duplikaterkennung
 aufwenden, was den höheren CPU-Verbrauch für das Empfangen erklären würde.
\end_layout

\begin_layout Standard
Für Messungen mit TCP ist zu beachten, dass der PRP-1 stack in solchen Fällen
 TCP-Pakete sendet und Quittierungen vom Server erhält.
 Hier beansprucht lediglich der Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 mehr Rechenleistung vom Server als vom Client.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Bei der Netzwerklast via TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 ist die Differenz zwischen Client und Server zwar weniger markant als bei
 den anderen Netzwerklasten, jedoch werden hier weniger Pakete versandt
 als via UDP mit dem Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

.
 Dies resultiert aus der Tatsache, dass bei TCP der Client Quittierungen
 erhält und shck bzw.
 dessen TCP-Socket diese verarbeiten muss.
 Der PRP-1 stack erhält weniger CPU-Zeit zur Verfügung und kann somit weniger
 senden.
 Aus diesem Grund versendet der PRP-1 stack bei dieser Netzwerklast weniger
 Pakete als bei den anderen Datenströmen und beansprucht somit auch weniger
 Ressourcen, was die folgende Rechnung mit den ermittelten Werten (durchschnittl
iche TX-Bitrate von shck-Client auf Netzwerk-Interface 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

) aufzeigt:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $Pakete_{TCP:MIN}=\left\lceil \frac{2.22\,MBit/s}{77\,Byte}\right\rceil =3'603\,Pakete$
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $Pakete_{TCP:MAX}=\left\lceil \frac{98.7\,MBit/s}{1518\,Byte}\right\rceil =8'128\,Pakete$
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $Pakete_{UDP:MAX}=\left\lceil \frac{98.7\,MBit/s}{1518\,Byte}\right\rceil =8'128\,Pakete$
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Formula $Pakete_{UDP:MIN}=\left\lceil \frac{8.43\,MBit/s}{70\,Byte}\right\rceil =15'054\,Pakete$
\end_inset


\end_layout

\begin_layout Standard
Bezüglich der durchschnittlich beanspruchten Netzwerklast ist ersichtlich,
 dass Client und Server dieselben Bitraten erzielen.
 Die RX-Bitraten des Clients entsprechen den TX-Bitraten des Servers so
 wie auch die TX-Bitraten des Clients zu den RX-Bitraten des Clients.
\end_layout

\begin_layout Standard
Letzten Endes unterscheiden sich die Messwerte von Client und Server lediglich
 in der beanspruchten CPU-Last, worauf im Profiling, siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Profiling"

\end_inset

, genauer eingegangen wird.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Verhalten des PRP-1 stacks
\end_layout

\begin_layout Standard
Die ermittelten Messwerte zeigen auf, dass sich der PRP-1 stack durchgehend
 mehr im Kernelspace (Systemtime) als im Userspace (Usertime) befindet.
 Somit beschäftigt sich der PRP-1 stack häufiger mit Betriebssystem-Funktionen
 als mit den administrativen Aufgaben des PRP-Protokolls.
\end_layout

\begin_layout Standard
Zu den Tätigkeiten im Kernel-/Userspace gehören u.a.:
\end_layout

\begin_layout Itemize
Kernelspace
\end_layout

\begin_deeper
\begin_layout Itemize
Kommunikation von und zum virtuellen Netzwerk-Interface 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

 bzw.
 Datenströme mit Hardware austauschen
\end_layout

\begin_layout Itemize
Handhabung von Timern und Interrupts
\end_layout

\end_deeper
\begin_layout Itemize
Userspace
\end_layout

\begin_deeper
\begin_layout Itemize
Anfügen und Entfernen des RCTs am und vom Frame
\end_layout

\begin_layout Itemize
Organisation der Datenstruktur zur Duplikaterkennung (Aging, Einträge hinzufügen
 / löschen)
\end_layout

\end_deeper
\begin_layout Subsubsection
Profiling
\begin_inset CommandInset label
LatexCommand label
name "sub:Profiling"

\end_inset


\end_layout

\begin_layout Standard
Um die vorhergehenden Aussagen zum Verhalten des PRP-1 stacks additional
 zu belegen, wird ein Profiling mit dem Tool 
\begin_inset Quotes fld
\end_inset

perf
\begin_inset Quotes frd
\end_inset

 (siehe Tabelle 
\begin_inset CommandInset ref
LatexCommand vref
reference "tab:perf"

\end_inset

) erstellt.
 Das Profiling soll aufzeigen, welche Funktionen am meisten CPU-Zeit verbrauchen
, wie gross der Anteil an Kernelspace-Funktionen ist und wie auf dem gesamten
 Betriebssystem die Prozesse und deren Funktionen verteilt sind.
\end_layout

\begin_layout Standard
Um die Reports von perf grafisch darzustellen, werden sogenannte 
\begin_inset Quotes fld
\end_inset

Flame Graphs
\begin_inset Quotes frd
\end_inset

 eingesetzt.
 
\begin_inset CommandInset citation
LatexCommand cite
key "flamegraphs-home"

\end_inset

 
\end_layout

\begin_layout Paragraph
Interpretation eines Flame Graphs
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Die Interpretation eines Flame Graphs ist wie folgt zu verstehen:
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Abszissenachse:}
\end_layout

\end_inset

 Prozentualer zeitlicher Anteil, welcher eine Funktion auf der CPU verbraucht.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Ordinatenachse:}
\end_layout

\end_inset

 Anzeige des Call-Stacks aller Funktionsaufrufe.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Blau markierte Balken:}
\end_layout

\end_inset

 Übergang Userspace/Kernelspace, initiiert durch einen System-Call.
\end_layout

\begin_layout Itemize
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{Restliche Farben:}
\end_layout

\end_inset

 Nicht von Bedeutung.
 Die Farben werden mit einem Zufallsgenerator ausgewählt.
 Die Rot/Orange/Gelb-Abstufungen dienen lediglich dazu, einzelne Balken
 optisch besser zu trennen.
\end_layout

\begin_layout Paragraph
Ausgangslage
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset

Für das Erstellen der Profildaten wurden die Betriebssysteme zweier Maschinen
 (srv01 und srv02) über einen Zeitraum von 60 Sekunden aufgezeichnet.
 Als Netzwerklast wurden TCP-Pakete verwendet, da die Client- und die Server-App
likation Daten versenden sowie empfangen.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
shck-Client (srv01)
\end_layout

\begin_layout Itemize
shck generiert TCP-Daten
\begin_inset Newline newline
\end_inset

mit maximaler Frame-Grösse
\begin_inset Newline newline
\end_inset

via PRP-Interface
\end_layout

\begin_layout Itemize
keine weiteren Prozesse,
\begin_inset Newline newline
\end_inset

welche CPU-Zeit beanspruchen
\begin_inset Newline newline
\end_inset

(ausser PRP-1 stack)
\end_layout

\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "50col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\series bold
shck-Server (srv02)
\end_layout

\begin_layout Itemize
shck empfängt TCP-Daten
\begin_inset Newline newline
\end_inset

mit maximaler Frame-Grösse
\begin_inset Newline newline
\end_inset

via PRP-Interface
\end_layout

\begin_layout Itemize
keine weiteren Prozesse,
\begin_inset Newline newline
\end_inset

welche CPU-Zeit beanspruchen
\begin_inset Newline newline
\end_inset

(ausser PRP-1 stack)
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Alle Prozesse des Betriebssystems
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{shck-Client (Sender)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/perf-kernel_60s_all_procs_tcp_sender_ba.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph des shck-Clients, alle Prozesse
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace -20bp
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{shck-Server (Empfänger)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/perf-kernel_60s_all_procs_tcp_receiver_ba.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph des shck-Servers, alle Prozesse
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Werden alle Prozesse des Betriebssystems betrachtet, ist festzustellen,
 dass der PRP-1 stack beim Empfangen mehr CPU-Zeit zur Verfügung hat.
 Ein Grund dafür ist, dass der shck-Server signifikant weniger CPU-Zeit
 beansprucht, als der shck-Client, welcher die TCP-Pakete generieren und
 versenden muss.
 Das bedeutet, dass bei Netzwerklasten, die einen Engpass beim Prozessor
 verursachen, dieser Engpass durch shck auf dem Client weiter verengt werden
 kann.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Bei Netzwerklasten mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 ist jedoch die Netzwerkanbindung der limitierende Faktor, wobei dort der
 Prozessor nicht komplett ausgelastet wird.
 Hier erhält der PRP-1 stack auf dem Server mehr Platz, da shck auf dem
 Server weniger CPU-Last beansprucht.
 Trotzdem benötigt dieser PRP-1 stack auch mehr Platz, da das Empfangen
 von Frames mehr Leistung benötigt als das Senden.
\end_layout

\begin_layout Standard
Der markante Anteil des idle-Prozesses, lässt sich dadurch erklären, dass
 das Profiling bezüglich aller Prozesse des Betriebssystems durchgeführt
 wurde und somit auch alle Ressourcen der Maschine (1 Core mit 2 CPUs) kumulativ
 miteingerechnet werden.
 Die Separierung zwischen Userspace- und Kernelspace-Funktionen wurde für
 diese Gesamtübersicht weggelassen.
\end_layout

\begin_layout Paragraph
Spezifischer Prozess PRP-1 stack
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{shck-Client (Sender)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/perf-kernel_60s_prp1_stack_tcp_sender_ba.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph des shck-Clients, spezifisch PRP-1 stack
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace -20bp
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textbf{shck-Server (Empfänger)}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/perf-kernel_60s_prp1_stack_tcp_receiver_ba.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph des shck-Servers, spezifisch PRP-1 stack
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei der detaillierten Betrachtung des PRP-1-stack-Prozesses fällt auf, dass,
 unabhängig davon ob Client oder Server, für das Empfangen von Frames generell
 mehr CPU-Zeit aufgewendet werden muss als für das Senden.
 Selbst beim Senden von Paketen mit maximaler Grösse wird für das Empfangen
 der Quittierungen auf dem Client mehr CPU-Zeit beansprucht.
 Wird die beanspruchte Last vom Client für das Senden mit der Last vom Server
 für das Empfangen verglichen, ist klar ersichtlich, dass der Server mehr
 Leistung für den Empfang der Pakete benötigt.
 Der Versand und die Verarbeitung der Quittierungen bei TCP verursachen
 zusätzliche CPU-Last, welche bei Datenströmen mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 jedoch die Limitierungs-Charakteristiken nicht verändern.
\end_layout

\begin_layout Standard
Die beiden Flame Graphs des PRP-1 stacks zeigen auf, dass die Applikation
 zwar als Userspace-Applikation gestartet wird, jedoch verbringt sie den
 grössten Teil ihrer Ausführungszeit im Kernelspace.
 Dies ist darauf zurückzuführen, dass der PRP-1 stack als Hauptaufgabe die
 Kommunikation mit dem virtuellen PRP-Interface wahrzunehmen hat.
 Das Analysieren von Frames und Verwalten der Duplikattabelle stellt dagegen
 einen verhältnismässig kleinen Anteil dar.
\end_layout

\begin_layout Paragraph
PRP-Transmit-Funktion
\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/PRP_T_transmit.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph der PRP-Transmit-Funktion
\begin_inset CommandInset label
LatexCommand label
name "fig:Flame-Graph-der"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beim Versenden von Frames wird im PRP-Stack die Funktion 
\begin_inset Quotes fld
\end_inset

PRP_T_transmit
\begin_inset Quotes frd
\end_inset

 aufgerufen.
 Dies geschieht im Userspace.
 Um die zu sendenden Daten zu transmittieren, müssen diese in den Kernelspace
 kopiert werden, was mit dem Aufruf der Funktion 
\begin_inset Quotes fld
\end_inset

__copy_from_user_ll
\begin_inset Quotes frd
\end_inset

 vollzogen wird.
 Der zeitliche Anteil, um User-Daten in den Kernel-Space zu kopieren, hängt
 von der Grösse der zu versendenden Pakete ab.
 Anschliessend werden für das Transmittieren zahlreiche Kernelspace-Funktionen
 aufgerufen.
\end_layout

\begin_layout Paragraph
PRP-Receive-Funktion
\begin_inset CommandInset label
LatexCommand label
name "par:PRP-Receive-Funktion"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space \hfill{}
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/PRP_T_receive.png
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flame Graph der PRP-Receive-Funktion
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Receive-Funktion des PRP-1 stacks ist in der obigen Abbildung als komplette
 Kernelspace-Funktion abgebildet.
 Dies liegt daran, dass die Callback-Funktion 
\begin_inset Quotes fld
\end_inset

PcapReceive_callback
\begin_inset Quotes frd
\end_inset

 von pcap-Funktionen aus dem Kernelspace aufgerufen wird, sobald ein Frame
 eintrifft, welches verarbeitet werden muss.
 Beim Empfang von Frames, sind es die Funktionen des PRP-1 stacks, namentlich
 
\begin_inset Quotes fld
\end_inset

PRP_DiscardAlgorithm_T_search_entry
\begin_inset Quotes frd
\end_inset

 für das Durchsuchen der Duplikattabelle und das Aufnehmen neuer Frames
 in die Duplikattabelle, 
\begin_inset Quotes fld
\end_inset

PRP_Trailer_T_get_trailer
\begin_inset Quotes frd
\end_inset

 um den RCT aus einem ankommenden Frame zu lesen und 
\begin_inset Quotes fld
\end_inset

PRP_Trailer_T_remove_trailer
\begin_inset Quotes frd
\end_inset

 um diesen zu entfernen, welche die meiste CPU-Zeit beanspruchen.
 Der anschliessende Write-System-Call, um das aufbereitete Frame dem virtuellen
 PRP-Interface weiterzureichen, benötigt vergleichsweise wenig CPU-Zeit.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsubsection
Profiling Fazit
\begin_inset CommandInset label
LatexCommand label
name "sub:Profiling-Fazit"

\end_inset


\end_layout

\begin_layout Standard
Beim Profiling aller Prozesse des Betriebssystems wird sichtbar, dass die
 Zuteilung der CPU-Zeiten stark vom Scheduler des Betriebssystems abhängt.
 Der Netzwerklastgenerator 
\begin_inset Quotes fld
\end_inset

shck
\begin_inset Quotes frd
\end_inset

 benötigt für das Erstellen und Senden der Pakete mehr CPU-Zeit als für
 das Empfangen.
 
\end_layout

\begin_layout Standard
Dies wiederum resultiert darin, dass die PRP-1-stack-Applikation des sendenden
 Hosts weniger CPU-Zeit zur Verfügung hat als diejenige des empfangenden
 Hosts.
 Bei Netzwerklasten mit überwiegend Paketen, die eine maximale Paketgrösse
 aufweisen, ist dies kein limitierender Faktor, vorausgesetzt, es befinden
 sich nicht zu viele zusätzlich laufenden Prozesse auf dem Betriebssystem,
 welche die CPU auslasten.
\end_layout

\begin_layout Standard
Die PRP-1-stack-Applikation verbringt die meiste Ausführungszeit im Kernelspace.
 Beim Transmittieren von Paketen entsteht der folgende Datenfluss:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/us_ks_overhead.svg
	lyxscale 50
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Userspace/Kernelspace-Datenfluss, PRP-1 stack transmit
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Daten, die von der ursprünglichen Applikation aus versendet wurden, werden
 vom PRP-1 stack wieder in den Userspace kopiert, und gelangen anschliessend
 erneut in den Kernelspace, um über die physischen Interfaces, eth0 und
 eth1, transmittiert zu werden.
 Dies sind zwei zusätzliche Kopiervorgänge zwischen Kernel- und Userspace,
 verglichen mit einem herkömmlichen Sendevorgang über ein physisches Netzwerk-In
terface.
\end_layout

\begin_layout Standard
Die Kopiervorgänge nehmen ein im Verhältnis grosses Zeitquantum in Anspruch,
 wie dies beispielsweise in Abbildung 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Flame-Graph-der"

\end_inset

 sichtbar ist.
 Die Funktion 
\begin_inset Quotes fld
\end_inset

__copy_from_user_ll
\begin_inset Quotes frd
\end_inset

 verbraucht einen prozentual hohen Anteil an CPU-Zeit, gegenüber anderen
 Funktionen beim Transmittieren eines Pakets.
 Wenn der PRP-1 stack ausschliesslich im Kernlspace betrieben würde, könnte
 dieser Overhead vermieden werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _diagrams/021_profiling/pie_charts_combined.svg
	lyxscale 50
	display false
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Grobübersicht Verhältnis zwischen Userspace und Kernelspace 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ein zusätzlicher Aspekt, der für eine Portierung des PRP-1 stacks in ein
 Kernel-Modul sprechen würde, wäre der Umstand, dass die Funktionen des
 PRP-Protokolls (Verwalten der Duplikaterkennungs-Tabelle, etc.) in ihrer
 Ausführung prioritär vom Betriebssystem-Scheduler behandelt würden.
\end_layout

\begin_layout Standard
Dies würde auch nach sich ziehen, dass die Timer-Deadlines, welche in der
 PRP-1-stack-Implementierung eine zentrale Rolle einnehmen (Supervision
 Frames, Aging-Timer), marginal genauer eingehalten werden könnten.
 Da die Timer jedoch nur eine Genauigkeit im Bereich von Millisekunden einhalten
 müssen, wäre dieser Faktor vernachlässigbar.
\end_layout

\begin_layout Subsubsection
Weitere Aspekte
\begin_inset CommandInset label
LatexCommand label
name "sub:01:Weitere-Aspekte"

\end_inset


\end_layout

\begin_layout Standard
Bei der CPU-Last ist des Weiteren ein markanter Unterschied zwischen den
 Ultrakurzzeit- und Kurzzeit-Messungen der Netzwerklast mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 via UDP festzustellen, obwohl sie gleich sein müssten.
 Der einzige Unterschied zwischen diesen Messungen liegt im Zeitpunkt, an
 dem die Messung beendet wird.
 Mehrere Durchläufe der Messungen ergaben stets das selbe Ergebnis.
 Zusätzlich wurde sichergestellt, dass sich die Messungen nicht beeinflussen,
 indem die Abstände zwischen den Messungen vergrössert und die Reihenfolge
 der Messungen abgeändert wurden, jedoch ohne ein anderes Ergebnis zu erzielen.
 Bei einer Ultrakurzzeit-Messung des vorhin erwähnten Lasttyps, erhält der
 PRP-1 stack mehr CPU-Zeit (der Engpass durch den Prozessor ist kleiner)
 und kann somit eine marginal höhere Bitrate erzielen.
 Diese höhere CPU-Last spiegelt sich in der TX-Bitrate des Clients, der
 RX-Bitrate des Servers und der daraus resultierenden CPU-Last des Servers
 wieder.
 Eine Differenz bei der Netzwerklast-Generierung durch shck ist auszuschliessen,
 da für beide Messungen die selben Parameter verwendet werden und bei Ultrakurzz
eit-Messungen lediglich der Generierungs-Prozess früher per kill-Befehl
 terminiert wird.
 Es besteht Grund zur Annahme, dass diese Unterschiede durch vom Betriebssystem
 stammende Mechanismen (Scheduler) erzeugt werden.
 
\end_layout

\begin_layout Standard
Ferner sind beim Server bei der CPU-Last bei einigen Netzwerklasten sehr
 langsame periodischen Schwankungen festzustellen, die beim empfangenden
 PRP-1 stack des Servers entstehen.
 Im Gegensatz zu der schwankenden CPU-Last bleiben die Bitraten des Servers
 jedoch konstant.
\end_layout

\begin_layout Standard
Im Fazit über das Profiling des PRP-1 stacks, siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Profiling-Fazit"

\end_inset

, wird erwähnt, dass der Scheduler des Betriebssystems einen Einfluss auf
 die unterschiedlichen CPU-Auslastungen und Schwankungen haben könnte.
 Im Rahmen der vorliegenden Arbeit kann diese These jedoch aus Zeitgründen
 nicht näher untersucht und durch weitere Testszenarien zusätzlich belegt
 werden.
\end_layout

\begin_layout Standard
Über eine manuelle Systemüberprüfung konnten keine weiteren möglichen Einflüsse
 festgestellt werden.
 
\end_layout

\begin_layout Standard
Eine weitere Beobachtung kann bei den Schwankungsbändern (Differenz von
 Maximal- und Minimal-Wert) der unterschiedlichen Statistik-Merkmalen gemacht
 werden.
 Im Vergleich zur Steady-State-Untersuchung in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Einschwingzeit-/-Steady"

\end_inset

 fallen diese kleiner aus.
 Dies ist auf den Einfluss der gewählten Messintervallgrössen zurück zu
 führen.
 Bei der Steady-State-Untersuchung wurde ein Intervall von 0.1s selektiert,
 der Allgemeinfall, wie er u.a.
 in diesem Szenario angewandt wird, beträgt jedoch 1s.
 Die daraus entstehenden Konsequenzen werden in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "par:Einfluss von Intervallgroessen"

\end_inset

 erläutert.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\backslash
fcolorbox{black}{yellow}{
\backslash
begin{minipage}[t]{1.0
\backslash
textwidth}
\end_layout

\begin_layout Plain Layout

In den Interpretationen der nachfolgenden Szenarien wird dieses Szenario
 als Vergleichsgrundlage betrachtet.
 Diese Interpretationen legen den Fokus auf die ermittelten Differenzen
 zwischen dessen und diesem Szenario.
 Sollte auf etwas in den nachfolgenden Interpretationen nicht eingegangen
 werden, so ist es in dieser Interpretation oder in Kapitel 
\backslash
vref{sec:Besprechung-der-Ergebnisse} nachzulesen.
\end_layout

\begin_layout Plain Layout


\backslash
end{minipage}}
\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-01:-Performance-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Szenario 02: Performance ohne PRP
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-02:-Performance"

\end_inset


\end_layout

\begin_layout Standard
Die Messresultate dieses Szenarios (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Szenario-02:-Performance-1"

\end_inset

) führen für jeden Fall die Prozessor-Leistungs-Werte von shck anstelle
 des PRP-1 stacks auf.
 Es werden die Fälle dieses Szenarios untereinander oder mit dem Szenario
 01 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-01:-Performance-1"

\end_inset

) verglichen.
 Die Vergleiche werden wie folgt durchgeführt:
\end_layout

\begin_layout Itemize
Client SAN sendet an Server SAN
\begin_inset Newline newline
\end_inset

Die Client- und Server-Werte werden mit den Werten des Falls 
\begin_inset Quotes fld
\end_inset

Client DAN sendet an Server DAN
\begin_inset Quotes frd
\end_inset

 verglichen, welcher der Konfiguration in Szenario 01 entspricht, der Unterschie
d jedoch darin liegt, dass die CPU-Werte von shck anstelle des PRP-1 stacks
 gemessen werden.
 So können die Leistungsdifferenzen zwischen einer PRP- und Nicht-PRP-Umgebung
 mit den selben Netzwerklasten festgestellt werden.
\end_layout

\begin_layout Itemize
Client SAN sendet an Server DAN
\begin_inset Newline newline
\end_inset

Die ermittelten Werte des Clients werden in diesem Fall mit den Client-Werten
 des vorherigen Falls abgewägt, um sagen zu können, wie sich die Performance
 des Clients ändert, wenn er mit einem Server mit aktivem PRP-1 stack kommunizie
rt.
 Bezüglich den Server-Werten dieses Falls: Diese werden mit den entsprechenden
 Werten des letzten Falls dieses Szenarios verglichen, womit die Performanceunte
rschiede bei der Netzwerklast-Generierung von einem SAN aus ermittelt werden
 können.
\end_layout

\begin_layout Itemize
Client DAN sendet an Server SAN
\begin_inset Newline newline
\end_inset

Hier werden die ermittelten Resultate des Clients mit denen des Falls 
\begin_inset Quotes fld
\end_inset

Client DAN sendet an Server DAN
\begin_inset Quotes frd
\end_inset

 abgewägt.
 Daraus kann gesagt werden, wie sich die Leistungsbeanspruchung des Clients
 ändert, wenn dieser seine Netzwerklast an einen SAN sendet.
 Die Werte des Servers dieses Falls werden mit dem ersten Fall dieses Szenarios
 verglichen, um analysieren zu können, welche Performanceunterschiede sich
 beim Server, der die Last von einem DAN erhält, ergeben.
\end_layout

\begin_layout Itemize
Client DAN sendet an Server DAN
\begin_inset Newline newline
\end_inset

Dieser Fall dient als Anhaltspunkt für die Analyse der restlichen Fälle
 dieses Szenarios, weil es sich bei diesem Fall um die gleiche Konfiguration
 wie bei Szenario 01 (siehe 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-01:-Performance-1"

\end_inset

) handelt.
 Der Unterschied liegt in dem Prozess, dessen durch ihn verursachte CPU-Last
 gemessen wurde (shck anstelle des PRP-1 stacks).
 Die Gründe für diesen Perspektivenwechsel sind im Szenariobeschrieb auf
 Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-02:-Performance"

\end_inset

 erläutert.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 02: Limitierungen / Engpässe}]{Limitierungen /
 Engpässe}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bezüglich den Limitierungen bei den unterschiedlichen Netzwerklasten sind
 im Vergleich zum ersten Szenario bei keinem Fall festzustellen.
 Klar ersichtlich wird hier jedoch, dass der Prozessor-Engpass bei den Lasten
 mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 (TCP und UDP) bei shck entsteht, da die CPU-Werte beim Client bei diesen
 Lasten der grösstmöglichen Leistung eines single-threaded Prozesses entsprechen.
 
\end_layout

\begin_layout Standard
Des Weiteren erzielen diese Lasten mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 in einer Nicht-PRP-Umgebung (SAN an SAN) höhere Bitraten beim Versand von
 Paketen und Erhalten von Quittierungen, da durch die Abwesenheit des PRP-1
 stacks auf beiden Seiten der Prozessor-Engpass weiter geöffnet wird und
 somit mehr Zeit für die Netzwerklast-Generierung aufgewendet werden kann.
 Dazu kann auch bei der TCP-Last vom Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 eine marginal höhere Bitrate bei den Quittierungen festgestellt werden.
\end_layout

\begin_layout Standard
Wird das Zusammenspiel zwischen SAN Client an DAN Server mit einer Nicht-PRP-Umg
ebung verglichen, ist ersichtlich, dass der Client bei der TCP-Last mit
 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

-Lasttyp markant weniger Quittierungen erhält.
 Dies erklärt sich durch den Prozessor-Engpass, der beim Server durch den
 aktiven PRP-1 stack wieder eingeengt wird, weshalb dieser weniger TCP-Quittieru
ngen als ein SAN senden kann.
 Dadurch, dass der SAN-Client weniger Quittierungen vom DAN-Server erhält,
 kann der Client auch weniger TCP-Netzwerklast vom Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 versenden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 02: Verhalten zwischen shck-Client und -Server}]{Verha
lten zwischen shck-Client und -Server}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beim Vergleich vom DAN-Server bei SAN zu DAN mit einer PRP-Umgebung wird
 festgestellt, dass der Server beim Empfangen des Lasttyps 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 vom SAN-Client mehr CPU-Last beansprucht als wenn der Server die Daten
 von einem DAN-Client erhalten würde.
 Dies entsteht aus der Tatsache, dass der SAN-Client mehr Prozessor-Zeit
 zur Verfügung für das Senden von Datenströmen hat und somit auch mehr Daten
 beim Server eintreffen (Client-TX-Bitrate, Server-RX-Bitrate und somit
 auch Server-CPU-Last steigen bei dieser bestimmten Netzwerklast).
 Der Server kann darauf auch mehr TCP-Quittierungen senden.
 Des Weiteren erzielt das PRP-Netzwerk-Interface des DAN-Servers beim Lasttyp
 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 eine höhere RX-Bitrate, weil ohne den Versand über den PRP-1 stack die
 6 Byte für den RCT in der Payload wegfallen und somit 6 Byte mehr pro Frame
 übertragen werden können.
\end_layout

\begin_layout Standard
Vergleicht man die SAN-Server mit den DAN-Server wird festgestellt, dass
 ein SAN-Server die Frames schneller verarbeiten und bei TCP auch schneller
 quittieren kann.
 Daraus resultiert auch, dass Clients eine höhere TCP-Last mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 an SAN-Server senden können (Client erzielt dort höhere RX- und TX-Bitraten).
\end_layout

\begin_layout Standard
Beim Betrachten der SAN- und DAN-Clients fällt auf, dass ein DAN-Client
 beim Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 weniger Durchsatz aufgrund des CPU-Engpasses erzielt und somit auch die
 CPU-Last des Servers bei diesem Typ bei den Datenströmen eines DAN-Clients
 geringer ausfällt.
 Dadurch kann der Server auch weniger an den DAN-Client quittieren.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 02: Verhalten des PRP-1 stacks}]{Verhalten des
 PRP-1 stacks}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei den Fällen, in denen es sich beim Client um einen DAN handelt, ist bezüglich
 den CPU-Werten bei den Netzwerklasten mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 eine Steigerung gegenüber einem SAN-Client festzustellen.
 Daraus besteht Grund zur Annahme, dass shck für die Kommunikation mit dem
 PRP-Interface mehr Prozessor-Ressourcen beansprucht als für die direkte
 Kommunikation mit einem physischen Interface.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 02: Weitere Aspekte}]{Weitere Aspekte}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beim Fall 
\begin_inset Quotes fld
\end_inset

Client DAN sendet an Server DAN
\begin_inset Quotes frd
\end_inset

 ist bei den Server-CPU-Werten bei der UDP-Netzwerklast mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 wie in Szenario 01 ein Unterschied zwischen den Messungen, die sich lediglich
 in der Dauer unterscheiden, festzustellen.
 Darauf wird bereits in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01:Weitere-Aspekte"

\end_inset

 eingegangen.
\end_layout

\begin_layout Standard
Im vorhin erwähnten Kapitel wird auch auf die langsamen periodischen Schwankunge
n eingegangen, die bei der CPU-Last eines DAN-Servers entstehen und besonders
 stark bei den Datenströmen mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 ausfallen.
 In diesem Szenario wird jedoch auch die Erkenntnis gewonnen, dass diese
 Schwankungen nur entstehen wenn es sich bei beiden Teilnehmern (Client
 und Server) um DANs handelt.
 Wenn nur einer der beiden ein DAN ist, treten diese Schwankungen beim Server
 nicht auf.
 Dies führt zum Entschluss, dass diese Schwankungen mit der Auslastung durch
 die Kombination des PRP-1 stacks und shck auf Client und Server entstehen.
 Daraus besteht Grund zur Annahme, dass diese Schwankungen durch vom Betriebssys
tem stammende Mechanismen (Scheduler) erzeugt werden.
 Das Verhalten des Schedulers wäre zu untersuchen, was jedoch aus Zeitgründen
 nicht mehr durchgeführt werden kann.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-02:-Performance"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-02:-Performance-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
section[head={Szenario 03: Effekt von Laufzeitunterscheidungen / 
\backslash

\backslash
Einfluss nicht entfernter Duplikate}]{Szenario 03: Effekt von Laufzeitunterschei
dungen zwischen Netzwerk A und B / Einfluss nicht entfernter Duplikate auf
 Funktion und Performance}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-03:-Effekt"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 03: Delay in Netzwerk A und Einfluss nicht entfernter
 Duplikate}]{Delay in Netzwerk A und Einfluss nicht entfernter Duplikate}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "03-Delay in Netzwerk A und Einfluss nicht entfernter Duplikate"

\end_inset


\end_layout

\begin_layout Standard
Sobald ein Delay, der grösser oder gleich der Aging-Time von 400ms ist,
 pro Richtung in Netzwerk A eingefügt wird, wird das Duplikat vom PRP-1
 stack nicht mehr als solches erkannt und unter der Annahme, dass es sich
 um ein neues Frame handelt, auf die höheren Layer durchgelassen.
 Dies wird anhand des ping-Befehls, der auf dem Client mit dem Server als
 Ziel ausgeführt wird, klar.
 Dort werden durchgelassene Duplikate mit einem 
\begin_inset Quotes fld
\end_inset

(DUP!)
\begin_inset Quotes frd
\end_inset

 im Verlauf gekennzeichnet.
 Des Weiteren wird ersichtlich, dass bei einem Delay, der genau der Aging-Time
 entspricht, manche Duplikate noch erkannt werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename _img/021_scen_03_delay_ping.png
	lyxscale 50
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Einfluss von Delays in Netzwerk A auf ping
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Betrachtet man die Messresultate dieses Szenarios in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:03-Delay-in-Netzwerk"

\end_inset

, ist festzustellen, dass bei den UDP-Netzwerklasten keine markanten Abweichunge
n auftreten.
 
\end_layout

\begin_layout Standard
Beim TCP-Verkehr ist eine starke Steigerung der CPU-Last bei Client und
 Server aufzufinden.
 Die Bitraten bei jedem Fall scheinen aus folgenden Gründen nicht aussagekräftig
 und somit nicht interpretierbar zu sein:
\end_layout

\begin_layout Itemize
Die RX-Bitraten sämtlicher Netzwerklasten auf Client und Server des PRP-Interfac
es sind höher als die entsprechenden RX-Bitraten der physischen Netzwerk-Interfa
ces.
\end_layout

\begin_layout Itemize
Bezüglich PRP-Interface: Die TX-Bitraten des Clients stimmen nicht mit den
 RX-Bitraten des Servers überein, sowie auch nicht die TX-Bitraten des Servers
 mit den RX-Bitraten des Clients.
 
\end_layout

\begin_layout Itemize
Die in Szenario 02 beim Fall 
\begin_inset Quotes fld
\end_inset

SAN sendet an SAN
\begin_inset Quotes frd
\end_inset

 erzielten Bitraten des TCP-Verkehrs mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Client-SAN-sendet"

\end_inset

) sind die in dieser Arbeit höchstmöglichen Werte, da dort der kleinste
 Prozessor-Engpass aufgrund der Abwesenheit des PRP-1 stacks liegt.
 Die Limitierung durch die Netzwerkanbindung bleibt zudem über die ganze
 Arbeit unverändert.
 Die Bitraten dieser TCP-Last mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 überschreitet die vorhin erwähnten höchstmöglichen Werte, was alleine von
 der Logik her nicht möglich ist, weil in diesem Szenario der PRP-1 stack
 aktiv ist und der Prozessor-Engpass für shck nicht weiter geöffnet werden
 kann als in Szenario 02.
\end_layout

\begin_layout Standard
Dass z.B.
 die RX-Bitraten beim PRP-Interface des Servers beim UDP-Verkehr des Lasttyps
 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 über 100 MBit/s betragen und höher als die der entsprechenden physischen
 Interfaces sind, hätte bei den Fällen sein können, bei denen der Delay
 über oder gleich der Aging-Time entspricht.
 Bei diesen hätte der PRP-1 stack die Duplikate auch weitergeleitet und
 mitgezählt, was erklärbar gewesen wäre.
 Da dieses Verhalten jedoch auch bei den Fällen mit Delay-Zeiten unter der
 Aging-Time auftritt, besteht Grund zur Annahme, dass die Messungen nicht
 aussagekräftig sind.
\end_layout

\begin_layout Standard
Es wurden anhand konstantem Versand von TCP-Netzwerklast des Lasttyps 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 weitere Versuche mit unterschiedlichen Delays getätigt, um feststellen
 zu können, ab welchem Delay die in diesem Szenario auffindbaren Messresultate
 erzielt werden.
 Bei einem Delay von 20ms waren die Werte noch annehmbar, jedoch ab einem
 Delay von 30ms entsprachen sie den Werten dieses Szenarios.
\end_layout

\begin_layout Standard
PROFILING WIP
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 03: Störquellen in Netzwerk A}]{Störquellen in
 Netzwerk A}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Beim Vergleich der Messresultate bei Paketverlust in Netzwerk A mit den
 Resultaten bei Übertragungsfehlern in Netzwerk A stellt sich heraus, dass
 beide den gleichen Effekt erzielen.
 Als einziger Unterschied ist die marginal höhere Bitrate (ca.
 1 MBit/s) beim Versand von UDP-Datenströmen mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 festzustellen.
 
\end_layout

\begin_layout Standard
Des Weiteren kann bei beiden Störungstypen erkannt werden, dass die Bitraten
 für die TCP-Quittierungen (Client-RX- und Server-TX-Bitrate) beim TCP-Verkehr
 mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 bei einer Fehlerrate von 100% stark sinkt.
 Zwischen den Fehlerraten von 25%, 50% und 75% sind keine markanten Unterschiede
 festzustellen.
\end_layout

\begin_layout Standard
Bei der TCP-Last wird bezüglich beiden Lasttypen ersichtlich, dass die CPU-Last
 im Vergleich zum Normalfall (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-01:-Performance-1"

\end_inset

) (besonders beim Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

) höher ausfällt.
 Jedoch scheinen die Client-RX- und Server-TX-Bitraten beim TCP-Verkehr
 des Lasttyps 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 mit Fehlerraten, die nicht 100% betragen, nicht aussagekräftig zu sein,
 aus dem Grund, der in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "03-Delay in Netzwerk A und Einfluss nicht entfernter Duplikate"

\end_inset

 als dritter Listenpunkt (bezieht sich auf Szenario 02) aufgeführt ist.
 Eine weitere These wäre, dass der Server bei dieser Last viel mehr Quittierunge
n versendet, was aufgrund der stabilen Verbindung über Netzwerk B nicht
 begründet wäre.
 Die Client-TX-Bitraten entsprechen denen vom Normalfall.
\end_layout

\begin_layout Standard
Bezüglich der Server-CPU-Last ist diese jeweils bei pro Netzwerklast bei
 einer Fehlerrate von 100% am geringsten, da dort nie Duplikate ankommen,
 die vom Server abgehandelt werden müssen.
 Bis auf die oben erwähnten Werte, befinden sich die Bitraten des Servers
 in der Nähe des Normalzustands.
\end_layout

\begin_layout Standard
Zudem ist bei den CPU-Werten bei der UDP-Netzwerklast mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 wie in Szenario 01 ein Unterschied zwischen den Messungen, die sich lediglich
 in der Dauer unterscheiden, festzustellen.
 Darauf wird bereits in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01:Weitere-Aspekte"

\end_inset

 eingegangen.
\end_layout

\begin_layout Standard
In den jeweiligen graphischen Resultaten (siehe Kapitel, das auf die entsprechen
den Messresultate folgt) ist besonders beim Vergleich der Client-TX- und
 Server-RX-Bitraten die Beeinflussung der Störung festzustellen.
 Daraus lässt sich schliessen, dass je höher die Fehlerrate ist, desto weniger
 Daten beim Server ankommen.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-03:-Effekt"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-03:-Effekt-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Szenario 04: Zeitweiser Ausfall eines Netzwerkpfades
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-04:-Zeitweiser"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 04: Limitierungen / Engpässe}]{Limitierungen /
 Engpässe}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Messwerte dieses Szenarios (siehe Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-04:-Zeitweiser-1"

\end_inset

) weisen Vergleich zur normalen PRP-Umgebung (Szenario 01, siehe Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-01:-Performance-1"

\end_inset

) keine Änderungen bei den Engpässen auf.
 Ausnahme bildet das physische Netzwerk-Interface 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 des Hosts 
\begin_inset Quotes fld
\end_inset

srv01
\begin_inset Quotes frd
\end_inset

, welches per ECI-Box in unterschiedlichen Zeitabständen aktiviert / deaktiviert
 wird.
 Diese Ausnahme ist anhand der RX- und TX-Bitraten des Clients beim Interface
 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 ersichtlich.
 
\end_layout

\begin_layout Standard
Am Interface 
\begin_inset Quotes fld
\end_inset

eth1
\begin_inset Quotes frd
\end_inset

 des gleichen Hosts sind keine Änderungen festzustellen, obwohl dort auch
 eine ECI-Box angeschlossen ist.
 An dieser ECI-Box werden jedoch keine Änderungen vorgenommen, sodass beim
 Interface 
\begin_inset Quotes fld
\end_inset

eth1
\begin_inset Quotes frd
\end_inset

 lediglich ein sehr kleiner Delay entsteht, welcher jedoch keine auffälligen
 Änderungen an den Messwerten mit sich zieht.
\end_layout

\begin_layout Standard
RX- und TX-Bitraten, die bei Client und Server auf den Interfaces 
\begin_inset Quotes fld
\end_inset

prp1
\begin_inset Quotes frd
\end_inset

 und 
\begin_inset Quotes fld
\end_inset

eth1
\begin_inset Quotes frd
\end_inset

 erzielt werden, zeigen im Vergleich zu Szenario 01 keine markanten Abweichungen.
 Dies kann dadurch begründet werden, dass trotz (zeitweisem) Ausfall des
 Interfaces 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 alle Pakete ihr Ziel erreichen und durch den Ausfall dieses Interfaces
 lediglich weniger Duplikate am PRP-1 stack ankommen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 04: Verhalten zwischen shck-Client und -Server}]{Verha
lten zwischen shck-Client und -Server}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Szenario 04: Verhalten zwischen shck-Client und -Server"

\end_inset


\end_layout

\begin_layout Standard
Dadurch, dass anhand des Ausfalls von 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 weniger Duplikate am PRP-1 stack ankommen, verringert sich die CPU-Last
 des Servers, da dessen PRP-1 stack somit weniger Daten verarbeiten muss.
 Dies kann soweit führen, dass der Server für die gleiche Last weniger Prozessor
-Ressourcen aufwenden muss als der Client.
\end_layout

\begin_layout Standard
Beim Client hingegen sind bezüglich der benötigten CPU-Last im Vergleich
 mit Szenario 01 keine Änderungen aufzufinden.
 Dies resultiert daraus, dass dessen PRP-1 stack sich immer noch mit der
 Duplikaterstellung beschäftigt und die Daten auch an das 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

-Interface weiterleitet, wessen Daten bei einem Ausfall nicht effektiv versendet
 werden.
 Diese nicht versendeten Daten werden vom Betriebssystem in den entsprechenden
 Statistiken (/proc-Dateisystem) korrekterweise nicht gezählt, weil dieses
 den Ausfall von 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 erkennt.
 Im Vergleich zu Szenario 03 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-03:-Effekt"

\end_inset

) ist festzustellen, dass dort das Betriebssystem von 
\begin_inset Quotes fld
\end_inset

srv01
\begin_inset Quotes frd
\end_inset

 die Störungen am Interface 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 nicht erkennt und im Gegensatz zu diesem Szenario die Netzwerklast wie
 üblich versendet wird.
 Dieser gerade geschilderte Ablauf ist auch beim Komplettausfall aufzufinden.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 04: Verhalten des PRP-1 stacks}]{Verhalten des
 PRP-1 stacks}
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "04-Verhalten des PRP-1 stacks"

\end_inset


\end_layout

\begin_layout Standard
Wie im zweiten Abschnitt des Kapitels 
\begin_inset CommandInset ref
LatexCommand vref
reference "Szenario 04: Verhalten zwischen shck-Client und -Server"

\end_inset

 erläutert wird, sendet der PRP-1 stack die Daten an das ausgefallene Interface
 weiter, obwohl es nicht aktiv ist.
 Dies ist wegen der stack-internen Variable 
\begin_inset Quotes fld
\end_inset

adapter_active
\begin_inset Quotes frd
\end_inset

 der Fall.
 Diese Variable gibt es pro Interface, das an den stack angebunden ist (
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 und 
\begin_inset Quotes fld
\end_inset

eth1
\begin_inset Quotes frd
\end_inset

).
 Ist diese Variable für jedes dieser Interfaces auf 1 anstelle 0 gesetzt,
 so nimmt der stack an, dass beide Interfaces aktiv sind.
 Fälschlicherweise setzt der stack diese Variablen stets auf 1 und betreibt
 auch keine Prüfung der Interfaces auf ihren Aktivitäts-Zustand.
 Dies wurde zudem überprüft, indem der stack mit deaktiviertem 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

-Interface gestartet und die entsprechende Variable trotzdem auf 1 gesetzt
 wurde.
\end_layout

\begin_layout Standard
Der Server hingegen erhält beim Ausfall von 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 keine Duplikate und verwaltet somit stets eine volle Duplikattabelle (Einträge
 werden erst aus der Tabelle entfernt, wenn das entsprechende Duplikat eingetrof
fen ist).
 Wie im Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:PRP-Overview"

\end_inset

 nachgelesen werden kann, werden die ältesten Einträge bei einer gefüllten
 Tabelle überschrieben oder die Einträge werden entfernt, sobald sie sich
 länger als 400ms in der Tabelle aufgehalten haben.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 04: Weitere Aspekte}]{Weitere Aspekte}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Des Weiteren sind folgende Unterschiede zwischen den aufgestellten Fällen
 dieses Szenarios u.a.
 anhand deren graphischen Resultaten (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Graphische-Resultate-1"

\end_inset

) feststellbar: Wird jede Sekunde die ECI-Box an 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 aktiviert / deaktiviert, so kann über dieses Interface kein Durchfluss
 erzielt werden.
 Daraus resultiert, dass 1 Sekunde eine zu kurze Zeit für die ECI-Box ist,
 um wirklich aktiv zu werden und somit einen Durchfluss zu ermöglichen.
 
\end_layout

\begin_layout Standard
Wird ein Intervall von 2s gewählt, ist es für den Client möglich, einen
 Teil der Datenströme über 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 zu versenden.
 Dieser Teil kommt jedoch nicht beim Server an, womit man sagen kann, dass
 dieser Teil von der ECI-Box verworfen wird.
 Der Client erhält bei diesem Intervall bei TCP-Übertragungen zudem keine
 Quittierungen vom Server bzw.
 kommen die Quittierungen über das Interface 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 nicht an.
\end_layout

\begin_layout Standard
In den graphischen Resultaten sind des Weiteren bei den Netzwerklasten mit
 Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 und Intervallgrösse von 2s Spitzen in den Graphen zu sehen, welche über
 100 MBit/s reichen.
 Als Erklärung dafür wird angenommen, dass bei der Aktivierung des Interfaces
 es noch Daten im Buffer hat, die er senden möchte und somit dann diesen
 Buffer leert und darauf die neuen Daten sendet.
 Bei dieser Buffer-Entleerung könnte es sein, dass das Interface die Limitierung
 auf 100 MBit/s nicht beachtet.
 Das bedeutet, dass hier das Betriebssystem in Kombination mit dem physischen
 Interface 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 Einfluss nehmen könnte.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Ab einem Intervall von 3s kann wie beim 2s-Intervall ein Teil übermittelt
 werden.
 Der Unterschied liegt darin, dass ab einem Intervall von 3s nicht alles
 von der ECI-Box verworfen wird und somit auch ein Teil der TCP-Quittierungen
 beim Client ankommt.
 Selbst bei einer Intervallgrösse von 9s kommt nicht der gesamte Teil, der
 über 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 versendet wird, beim Server an und umgekehrt.
 In diesem Szenario kommt nie genau die Menge an Daten, die über das Netzwerk
 A versendet wurde, beim anderen Teilnehmer an.
\end_layout

\begin_layout Standard
Mit jeder Sekunde, um die der Intervall vergrössert wird, steigt auch der
 Anteil an der Netzwerklast, die effektiv über das 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

-Interface versendet werden kann.
 Beobachtet werden kann auch, dass die Steigerung der Bitrate vom Intervall
 von 3s zu 4s grösser ist als die darauf folgenden Steigerungen.
 Die Steigerungen pro dazukommende Sekunde bei einer Intervallgrösse ab
 4s fällt nur noch marginal aus.
 Diese Tatsache spiegelt sich auch in den graphischen Resultaten wider.
 Die Intervallgrössen sind anhand deren Spitzen in den Parametern Client-RX-,
 Client-TX, Server-RX-Bitrate von 
\begin_inset Quotes fld
\end_inset

eth0
\begin_inset Quotes frd
\end_inset

 und der Server-CPU-Last ersichtlich.
 Bei den Server-Bitraten kann festgestellt werden, dass der Server bis auf
 die / einige nicht eintreffende Duplikate nichts von den Ausfällen merkt
 und normal seine Datenströme übermittelt.
\end_layout

\begin_layout Standard
Die in Szenario 01 auftretenden langsamen periodischen Schwankungen, die
 bei der CPU-Last des Servers entstehen (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01:Weitere-Aspekte"

\end_inset

), sind innerhalb dieses Szenarios nicht aufzufinden.
 Diese Tatsache führt zum Entschluss, dass diese Schwankungen lediglich
 bei einer konstanten Verbindung über beide Netzwerke auftritt.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-04:-Zeitweiser"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-04:-Zeitweiser-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Szenario 05: Abhängigkeit vom verwendeten Protokoll (TCP/UDP)
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-05:-Abhängigkeit"

\end_inset


\end_layout

\begin_layout Standard
In diesem Abschnitt wird ein Vergleich zwischen TCP- und UDP-Verkehr vorgenommen.
 Dazu dienen die Resultate aus Szenario 01 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Szenario-01:-Performance"

\end_inset

).
 Der Vergleich zwischen reiner Layer-2- und UDP-Netzwerklast wird in Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Erörterung-signifikanter-Resulta"

\end_inset

 durchgeführt.
\end_layout

\begin_layout Standard
Der Vergleich zwischen TCP- und UDP-Datenströmen wird in Szenario 01 im
 Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Interpretation"

\end_inset

 durchgeführt, jedoch erfolgt in diesem Kapitel eine Kurzfassung dessen
 Ergebnisse.
\end_layout

\begin_layout Standard
Die grösste Differenz, die zwischen den beiden Protokollen ermittelt wurde,
 sind die Quittierungen, die bei TCP vom Server generiert und versandt werden.
 Bei UDP hingegen sendet der Client lediglich seine Last, ohne eine Antwort
 vom Server zu erhalten.
 Diese Quittierungen lösen eine stärkere Beanspruchung der Prozessorleistung
 auf beiden Seiten aus.
 Der Client nimmt diese entgegen und verarbeitet sie neben dem Versand der
 mit shck generierten Netzwerklast.
 Der Server versendet die Quittierungen neben dem Empfangen der Netzwerklast,
 womit beide einen Mehraufwand gegenüber dem UDP-Verkehr haben.
 
\end_layout

\begin_layout Standard
Dieser Mehraufwand durch TCP betrifft den PRP-1 stack und den Netzwerklast-Gener
ator shck.
 Die CPU-Last des PRP-1 stacks ist in den Messresultaten von Szenario 01
 in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01-Messresultate"

\end_inset

 aufzufinden.
 Die durch shck erzeugte Prozessor-Nutzung kann in den Messresultaten von
 Szenario 02 nachvollzogen werden, wobei dort der Fall 
\begin_inset Quotes fld
\end_inset

Client DAN sendet an Server DAN
\begin_inset Quotes frd
\end_inset

 in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Client-DAN-sendet-1"

\end_inset

 betrachtet werden muss, der die selbe Konfiguration wie in Szenario 01
 behandelt.
\end_layout

\begin_layout Standard
Auf die Datenströme mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MAX
\begin_inset Quotes frd
\end_inset

 hat diese Differenz keinen merkbaren Einfluss auf die gemessenen Bitraten,
 da diese Ströme nicht durch einen Prozessor-Engpass limitiert werden.
\end_layout

\begin_layout Standard
Hingegen wird der CPU-Engpass bei den durch den Prozessor limitierten Netzwerkla
sten (Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

) durch TCP weiter verengt.
 Dies hat zur Folge, dass bei der TCP-Last mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 weniger Prozessor-Ressourcen für den Versand dieser TCP-Last als bei der
 UDP-Last des gleichen Lasttyps zur Verfügung stehen, was besonders anhand
 der erzielten TX-Bitrate auf dem Client bei den Messresultaten von Szenario
 01 in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01-Messresultate"

\end_inset

 ersichtlich ist.
\end_layout

\begin_layout Standard
Zusammengefasst kann gesagt werden, dass die Verwendung von TCP anhand dessen
 Antworten, die vom Empfänger an den Sender zusätzlich übermittelt werden,
 mit einer höheren CPU-Last als mit UDP verbunden ist.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-05:-Abhängigkeit"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-05:-Abhängigkeit-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Szenario 06: Auswirkungen, wenn Frames out-of-sequence ankommen
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-06:-Auswirkungen,"

\end_inset


\end_layout

\begin_layout Standard
Aus den Messresultaten dieses Szenarios in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Szenario-06:-Auswirkungen,-1"

\end_inset

 ist ersichtlich, dass die CPU-Lasten und die Bitraten vom Client und Server
 bezogen auf Szenario 01 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Szenario-01:-Performance-1"

\end_inset

) bis auf eine Ausnahme übereinstimmen.
 Des Weiteren weisen die Resultate der unterschiedlichen Fälle keine markanten
 Differenzen auf.
 Diese vorhin erwähnte Ausnahme bilden die erhöhten Prozessor-Lasten auf
 Client und Server (besonders auf dem Client) bei den TCP-Netzwerklasten
 mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Diese Erhöhung entsteht dadurch, dass der stack viele Pakete (beim Client
 TCP-Quittierungen) erhält, die vom einen Netzwerk aus nicht in der korrekten
 Abfolge eintreffen und somit einen Mehraufwand bei der Duplikatverwaltung
 mit sich ziehen.
 Dieser Mehraufwand ist proportional zur restlichen Abhandlung der Pakete
 bei allen Netzwerklasten ausser bei der über TCP mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 so klein, dass dieser sich nicht beim Vergleich der Messwerte herausfiltern
 lässt.
\end_layout

\begin_layout Standard
Konkret lässt sich dieser Mehraufwand wie folgt erklären: Wie im Paragraph
 
\begin_inset Quotes fld
\end_inset


\begin_inset CommandInset ref
LatexCommand nameref
reference "par:PRP-Receive-Funktion"

\end_inset


\begin_inset Quotes frd
\end_inset

 innerhalb des Kapitels 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Profiling"

\end_inset

 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "par:PRP-Receive-Funktion"

\end_inset

 nachgelesen werden kann, benötigt die PRP-1-stack-Funktion 
\begin_inset Quotes fld
\end_inset

PRP_DiscardAlgorithm_T_search_entry
\begin_inset Quotes frd
\end_inset

 einen beachtlichen Anteil der CPU-Last innerhalb des PRP-1 stacks beim
 Empfang von Frames.
 Diese Funktion beschäftigt sich mit dem Durchsuchen der Duplikattabelle
 und dem Aufnehmen neues Frames in diese Tabelle.
 Da in diesem Szenario die Abfolge der Frames auf einem Pfad abgeändert
 wird, benötigt der stack durchschnittlich mehr Zeit für das Auffinden des
 entsprechenden Eintrags in der Duplikattabelle.
\end_layout

\begin_layout Standard
WIP
\end_layout

\begin_layout Standard
, was anhand der folgenden Abbildung dargestellt wird.
\end_layout

\begin_layout Standard
-
\end_layout

\begin_layout Standard
Auf die unterschiedlichen Messresultate bezüglich der UDP-Netzwerklast mit
 Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 sowie auch auf die langsamen periodischen Schwankungen, die bei der CPU-Last
 des Servers entstehen, wird in der Interpretation von Szenario 01 in Kapitel
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01:Weitere-Aspekte"

\end_inset

 eingegangen.
\end_layout

\begin_layout Standard
Innerhalb dieses Szenarios fällt im Vergleich zum Szenario 01 auf, dass
 beim UDP-Verkehr mit Lasttyp 
\begin_inset Quotes fld
\end_inset

MIN
\begin_inset Quotes frd
\end_inset

 die Werte dort zwar unterschiedlich, aber konstant sind.
 Bei unterschiedlichen Messungen dieser Netzwerklast in diesem Szenario
 steigt / sinkt die CPU-Last des Clients nach über einer Minute auf einen
 bestimmten Wert und verharrt während dem Rest der Messung dort.
 Anhand der graphischen Resultate dieses Szenarios 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "06-Graphische Resultate"

\end_inset

 ist der vorhin erwähnte Ablauf klar ersichtlich, sowie auch die Beeinflussung
 der Testparameter, auf die zu Beginn des Kapitels 
\begin_inset CommandInset ref
LatexCommand vref
reference "chap:Resultate"

\end_inset

 eingegangen wird.
 Die Gründe für diesen Ablauf werden in der Interpretation von Szenario
 01 in Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01:Weitere-Aspekte"

\end_inset

 erläutert.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 06: Limitierungen / Engpässe}]{Limitierungen /
 Engpässe}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 06: Verhalten zwischen shck-Client und -Server}]{Verha
lten zwischen shck-Client und -Server}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 06: Verhalten des PRP-1 stacks}]{Verhalten des
 PRP-1 stacks}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
subsection[head={Szenario 06: Weitere Aspekte}]{Weitere Aspekte}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
TCP MIN CPU höher, Rest ok -> Verarbeitung der grossen Anzahl an Quittierungen,
 die Duplikate sind und in einer veränderten Abfolge ankommen.
 Mehr Iterationen durch Duplikattabelle
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Szenario-06:-Auswirkungen,"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-06:-Auswirkungen,-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Szenario 07: Einluss von Offload-Mechanismen
\begin_inset CommandInset label
LatexCommand label
name "sec:Szenario-07:-Einluss"

\end_inset


\end_layout

\begin_layout Standard
Beim Vergleich der Messresultate dieses Szenarios (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Szenario-07:-Einluss-1"

\end_inset

) mit denen aus Szenario 01 (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:01-Messresultate"

\end_inset

) konnten keine merkbaren Einflüsse auf die PRP-Umgebung ermittelt werden.
 Somit kann gesagt werden, dass die 3 untersuchten Mechanismen (RX- / TX
 Checksum Offload, Scatter-Gather) die CPU nicht / kaum erleichtern bzw.
 könnte der Gewinn so gering sein, dass er proportional zum Gesamtaufwand
 verschwindend klein ist.
\end_layout

\begin_layout Standard
Aufgrund der Fokussierung dieser Arbeit auf Frames / Pakete, die der minimalen
 oder maximalen Grösse eines Ethernet-Frames entsprechen, wurde keine Netzwerkla
st mit Fragmentierung konzipiert und versandt.
 Des Weiteren ist es über das virtuelle PRP-Interface nicht möglich, die
 Offload-Mechanismen bezüglich Fragmentierung einzusetzen, da der PRP-1
 stack alles, was er von der oberen Schicht erhält, als Ethernet-Frames
 den physischen Interfaces weitergibt.
 Das heisst, dass grosse TCP-/UDP-Pakete bereits auf Betriebssystem-Ebene
 fragmentiert und in Ethernet-Frames verpackt werden.
 Deshalb wurde ein Grossteil der im Szenariobeschrieb auf Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Einluss-von-Offload-Mechanismen"

\end_inset

 aufgeführten Mechanismen nicht näher analysiert.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\noindent
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="70col%">
<column alignment="right" valignment="top" width="25col%">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ablauf eines Szenarios
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Ablauf-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Generierte Netzwerklasten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "tab:Netzwerklasten-eines-Szenarios"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Szenariobeschrieb
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sub:Einluss-von-Offload-Mechanismen"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Messresultate
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seite 
\begin_inset CommandInset ref
LatexCommand pageref
reference "sec:Szenario-07:-Einluss-1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
